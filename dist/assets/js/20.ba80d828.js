(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{374:function(t,_,v){"use strict";v.r(_);var r=v(42),e=Object(r.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),v("p",[t._v("REST 就是一种设计 API 的模式。最常用的数据格式是 JSON。由于 JSON 能直接被 JavaScript 读取，所以，以 JSON 格式编写的 REST 风格的 API 具有简单、易读、易用的特点。")]),t._v(" "),v("p",[t._v("REST -- REpresentational State Transfer 直接翻译："),v("strong",[t._v("表现层状态转移")])]),t._v(" "),v("p",[t._v("通俗的可以理解为：")]),t._v(" "),v("p",[v("strong",[t._v("URL 定位资源，用 HTTP 动词（GET,POST,DELETE,DETC）描述操作。")])]),t._v(" "),v("h2",{attrs:{id:"好处"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#好处"}},[t._v("#")]),t._v(" 好处")]),t._v(" "),v("p",[t._v("由于 API 就是把 Web App 的功能全部封装了，所以，通过 API 操作数据，可以极大地把前端和后端的代码隔离，使得后端代码易于测试，前端代码编写更简单。")]),t._v(" "),v("p",[t._v("此外，如果我们把前端页面看作是一种用于展示的客户端，那么 API 就是为客户端提供数据、操作数据的接口。这种设计可以获得极高的扩展性。例如，当用户需要在手机上购买商品时，只需要开发针对 iOS 和 Android 的两个客户端，通过客户端访问 API，就可以完成通过浏览器页面提供的功能，而后端代码基本无需改动。")]),t._v(" "),v("h2",{attrs:{id:"原则"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#原则"}},[t._v("#")]),t._v(" 原则")]),t._v(" "),v("ul",[v("li",[v("p",[v("strong",[t._v("网络上的所有事物都被抽象为资源")])])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("每个资源都有一个唯一的资源标识符")])])]),t._v(" "),v("li",[v("p",[t._v("**同一个资源具有多种表现形式(xml,json 等) **")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("对资源的各种操作不会改变资源标识符")])])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("所有的操作都是无状态的")])])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("符合 REST 原则的架构方式即可称为 RESTful")])])])]),t._v(" "),v("h2",{attrs:{id:"规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#规范"}},[t._v("#")]),t._v(" 规范")]),t._v(" "),v("p",[t._v("-如何对资源操作")]),t._v(" "),v("p",[t._v("采用 HTTP 协议规定的 GET、POST、PUT、DELETE 动作处理资源的增删该查操作")]),t._v(" "),v("p",[v("img",{attrs:{src:"//img.joyfred.com/vuepress/lib-web/RESTful.webp",alt:"img"}})]),t._v(" "),v("h2",{attrs:{id:"示例"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),v("blockquote",[v("p",[t._v("URL命名通常有三种，")]),t._v(" "),v("ul",[v("li",[t._v("驼峰命名法(serverAddress)")]),t._v(" "),v("li",[t._v("蛇形命名法(server_address)")]),t._v(" "),v("li",[t._v("脊柱命名法(server-address)。")])]),t._v(" "),v("p",[t._v("由于URL是大小写敏感的，如果用驼峰命名在输入的时候就要求区分大小写，一个是增加输入难度，另外也容易输错，报404。")]),t._v(" "),v("p",[v("strong",[t._v("蛇形命名法")]),t._v("用下划线，在输入的时候需要切换shfit，同时下划线容易被文本编辑器的下划线掩盖；")]),t._v(" "),v("p",[t._v("支付宝用的是"),v("strong",[t._v("蛇形命名法")]),t._v("，stackoverflow.com和github.com用的是"),v("strong",[t._v("脊柱命名法")])])]),t._v(" "),v("h3",{attrs:{id:"url命名原则"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#url命名原则"}},[t._v("#")]),t._v(" URL命名原则")]),t._v(" "),v("p",[t._v("1、 URL请求采用小写字母，数字，部分特殊符号（非制表符）组成。")]),t._v(" "),v("p",[t._v("2、 URL请求中不采用大小写混合的驼峰命名方式，尽量采用全小写单词，如果需要连接多个单词，则采用连接符“_”连接单词")]),t._v(" "),v("h3",{attrs:{id:"url分级"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#url分级"}},[t._v("#")]),t._v(" URL分级")]),t._v(" "),v("p",[t._v("第一级Pattern为模块,比如组织管理/orgz, 网格化：/grid")]),t._v(" "),v("p",[t._v("第二级Pattern为资源分类或者功能请求，优先采用资源分类")]),t._v(" "),v("h3",{attrs:{id:"crud请求定义规范-restful"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#crud请求定义规范-restful"}},[t._v("#")]),t._v(" CRUD请求定义规范（RESTful）")]),t._v(" "),v("p",[t._v("如果为资源分类，则按照RESTful的方式定义第三级Pattern，")]),t._v(" "),v("p",[t._v("RESTful规范中，资源必须采用资源的名词复数定义。")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("/orgz/members")]),t._v(" "),v("th",[t._v("GET")]),t._v(" "),v("th",[t._v("获取成员列表")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("/orgz/members/120")]),t._v(" "),v("td",[t._v("GET")]),t._v(" "),v("td",[t._v("获取单个成员")])]),t._v(" "),v("tr",[v("td",[t._v("/orgz/members")]),t._v(" "),v("td",[t._v("POST")]),t._v(" "),v("td",[t._v("创建成员")])]),t._v(" "),v("tr",[v("td",[t._v("/orgz/members/120")]),t._v(" "),v("td",[t._v("PUT")]),t._v(" "),v("td",[t._v("修改成员")])]),t._v(" "),v("tr",[v("td",[t._v("/orgz/members")]),t._v(" "),v("td",[t._v("PUT")]),t._v(" "),v("td",[t._v("批量修改")])]),t._v(" "),v("tr",[v("td",[t._v("/orgz/members/120")]),t._v(" "),v("td",[t._v("PATCH")]),t._v(" "),v("td",[t._v("修改成员的部分属性")])]),t._v(" "),v("tr",[v("td",[t._v("/orgz/members/120")]),t._v(" "),v("td",[t._v("DELETE")]),t._v(" "),v("td",[t._v("删除成员")])])])]),t._v(" "),v("h3",{attrs:{id:"复杂查询请求定义规范-restful"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#复杂查询请求定义规范-restful"}},[t._v("#")]),t._v(" 复杂查询请求定义规范（RESTful）")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("/module/tickets?state=open")]),t._v(" "),v("th",[t._v("GET")]),t._v(" "),v("th",[t._v("过滤")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("/module/tickets?sort=-priority")]),t._v(" "),v("td",[t._v("GET")]),t._v(" "),v("td",[t._v("排序")])]),t._v(" "),v("tr",[v("td",[t._v("/module/tickets?sort=-priority,created_at")]),t._v(" "),v("td",[t._v("GET")]),t._v(" "),v("td",[t._v("排序")])]),t._v(" "),v("tr",[v("td",[t._v("/module/tickets?sort=-updated_at")]),t._v(" "),v("td",[t._v("GET")]),t._v(" "),v("td",[t._v("排序")])]),t._v(" "),v("tr",[v("td",[t._v("/module/tickets?state=closed&sort=-updated_at")]),t._v(" "),v("td",[t._v("GET")]),t._v(" "),v("td",[t._v("过滤+排序")])]),t._v(" "),v("tr",[v("td",[t._v("/module/tickets?q=return&state=open&sort=-priority,created_at")]),t._v(" "),v("td",[t._v("GET")]),t._v(" "),v("td",[t._v("搜索+过滤+排序")])]),t._v(" "),v("tr",[v("td",[t._v("/module/tickets/recently_closed")]),t._v(" "),v("td",[t._v("GET")]),t._v(" "),v("td",[t._v("一般数据请求")])]),t._v(" "),v("tr",[v("td",[t._v("/module/tickets?fields=id,subject,customer_name,updated_at&state=open&sort=-updated_at")]),t._v(" "),v("td",[t._v("GET")]),t._v(" "),v("td",[t._v("指定返回列")])]),t._v(" "),v("tr",[v("td",[t._v("/cars?offset=10&limit=5")]),t._v(" "),v("td",[t._v("GET")]),t._v(" "),v("td",[t._v("分页")])])])])])}),[],!1,null,null,null);_.default=e.exports}}]);