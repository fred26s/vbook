(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{381:function(e,r,t){"use strict";t.r(r);var a=t(42),s=Object(a.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"fiddler-工具简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fiddler-工具简介"}},[e._v("#")]),e._v(" Fiddler 工具简介")]),e._v(" "),t("h3",{attrs:{id:"工作环境"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#工作环境"}},[e._v("#")]),e._v(" 工作环境")]),e._v(" "),t("p",[t("a",{attrs:{href:"http://www.telerik.com/fiddler",target:"_blank",rel:"noopener noreferrer"}},[e._v("Fiddler 官网"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("主要功能（详见官网）：")]),e._v(" "),t("p",[e._v("Web Debugging\nPerformance Testing\nHTTP/HTTPS Traffic Recording\nWeb Session Manipulation\nSecurity Testing\nCustomizing Fiddler")]),e._v(" "),t("h3",{attrs:{id:"工作原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#工作原理"}},[e._v("#")]),e._v(" 工作原理")]),e._v(" "),t("p",[e._v("Fiddler 作为客户端和服务器之间的代理服务器。")]),e._v(" "),t("p",[e._v("Fiddler 的 2 种代理模式")]),e._v(" "),t("p",[e._v("流模式（streaming）：可实时把服务器数据返回给客户端。优点：更接近于浏览器本身真实的行为。\n缓冲模式（buffering）：HTTP 请求的所有数据在服务器端都准备好之后，才把数据返回给客户端。优点：可以控制最后的服务器响应。")]),e._v(" "),t("h3",{attrs:{id:"常见使用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见使用场景"}},[e._v("#")]),e._v(" 常见使用场景")]),e._v(" "),t("ol",[t("li",[e._v("开发环境 hosts 配置 通常情况下，配置 hosts 文件需要修改系统文件，很不方便；在多个开发环境下切换很低效。Fiddler 提供了相对高效的 hosts 配置方法。")]),e._v(" "),t("li",[e._v("前后端接口调试 通常情况下，调试前后端接口需要真实的环境、一大堆假数据、写 JavaScript 代码。Fiddler 只需要一个 UI 界面进行配置即可。")]),e._v(" "),t("li",[e._v("线上 bugfix Fiddler 可将发布文件代理到本地，快速定位线上 bug。")]),e._v(" "),t("li",[e._v("性能分析和优化 Fiddler 会提供请求的实际图，清晰明了网站需要优化的地方。")])]),e._v(" "),t("h2",{attrs:{id:"fiddler-界面操作介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fiddler-界面操作介绍"}},[e._v("#")]),e._v(" Fiddler 界面操作介绍")]),e._v(" "),t("h3",{attrs:{id:"工具条常用功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#工具条常用功能"}},[e._v("#")]),e._v(" 工具条常用功能")]),e._v(" "),t("p",[e._v("备注按钮(Set Comments)\n回放按钮（Replay）快捷键 R\n清空监控面板按钮（Remove）\n调试 Debug 按钮（Go）结合状态栏断点图标指示\n模式切换按钮（Stream）默认为缓冲模式\n解码请求按钮（Decode）\n保持会话按钮（Keep sessions）\n过滤请求按钮（Any Process）\n查找按钮（Find）\n保存会话按钮（Save）\n保存截图按钮\n计时器按钮\n快速启动浏览器按钮（Browse）\n清除缓存按钮（Clear Cache）\n编码、解码按钮（TextWizard）\n分离面板按钮（Tearoff）\nMSDN 搜索框")]),e._v(" "),t("h3",{attrs:{id:"状态栏操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#状态栏操作"}},[e._v("#")]),e._v(" 状态栏操作")]),e._v(" "),t("p",[e._v("控制台：help 命令\nCapturing 按钮：控制 Fiddler 是否进行捕获工作\n过滤会话来源\n记录当前展示的会话数量\n显示选中的会话 URL")]),e._v(" "),t("h3",{attrs:{id:"监控面板的使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#监控面板的使用"}},[e._v("#")]),e._v(" 监控面板的使用")]),e._v(" "),t("p",[e._v("监控面板是 Fiddler 的最核心的功能之一，显示 HTTP 的会话。")]),e._v(" "),t("p",[e._v("Result: HTTP 状态码\nProtocol: 协议\nHost: 主机\nServerIP: 服务器 IP\nURL")]),e._v(" "),t("p",[e._v("监控面板右侧 Tabs")]),e._v(" "),t("p",[e._v("分为上下 2 部分，上部分为 HTTP 请求相关信息，下部分为 HTT P响应相关信息。")]),e._v(" "),t("p",[e._v("数据统计（Statics): RTT 往返时间 Show Chart\n对请求进行解包（Inspectors）:\nHeraders 文件代理（AutoResponder）: 线上 bug 文件本地测试\n前后端接口联调（Composer）: 和服务器接口进行调试 日志（Log）\n网站性能分析的时间线（Timeline）")]),e._v(" "),t("h2",{attrs:{id:"fiddler-常用功能场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fiddler-常用功能场景"}},[e._v("#")]),e._v(" Fiddler 常用功能场景")]),e._v(" "),t("ul",[t("li",[t("h3",{attrs:{id:"定位线上bug"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定位线上bug"}},[e._v("#")]),e._v(" 定位线上bug")]),e._v(" "),t("blockquote",[t("p",[e._v("参考：https://www.cnblogs.com/LanTianYou/p/7207694.html")])]),e._v(" "),t("p",[e._v("在测试的过程中，有的需求是这样的，它需要你修改接口返回的数据，从而检查在客户端手机app内是否显示正确，这也算是一种接口容错测试，接口容错测试属于app性能（专项）测试的其中一种。")]),e._v(" "),t("h3",{attrs:{id:"通过fiddler我们可以有好几种方法修改返回结果"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#通过fiddler我们可以有好几种方法修改返回结果"}},[e._v("#")]),e._v(" 通过Fiddler我们可以有好几种方法修改返回结果：")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("在Fiddler底部的黑色命令行显示区域通过bpu url的形式按回车之后进行拦截，通过手机app访问指定接口，拦截到后可以选择response文件后通过拦截；")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("请求前断点（before response)： bpu\n取消断点，在命令行输入： bpu 回车就可以了\n响应后断点（after  requests）： bpafter\n取消断点，在命令行输入： bpafter 回车就可以了\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("在AutoResponder里Add Rule，然后在Rule Editor里设置response的内容；")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("实际就是使用AutoResponder来自动给指定接口返回指定数据；\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("li",[t("p",[e._v("在Rules设置中选择Automatic Breakpoints中的After Responses进行拦截。")])])]),e._v(" "),t("p",[e._v("第一种不能自定义创建response，只能通过选择文件的形式来指定response。")]),e._v(" "),t("p",[e._v("第三种对所有请求进行拦截，太粗太泛。所以实际测试拦截请求中，"),t("strong",[e._v("最灵活、功能最强的是第二种。")])])]),e._v(" "),t("li",[t("h3",{attrs:{id:"文件、文件夹代理和-hosts-配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文件、文件夹代理和-hosts-配置"}},[e._v("#")]),e._v(" 文件、文件夹代理和 HOSTS 配置")]),e._v(" "),t("p",[e._v("AutoResponder Tools->HOSTS")])]),e._v(" "),t("li",[t("h3",{attrs:{id:"请求模拟、前后端接口调试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#请求模拟、前后端接口调试"}},[e._v("#")]),e._v(" 请求模拟、前后端接口调试")]),e._v(" "),t("p",[e._v("Composer->GET/POST")])])]),e._v(" "),t("h3",{attrs:{id:"网络限速"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#网络限速"}},[e._v("#")]),e._v(" 网络限速")]),e._v(" "),t("p",[e._v("FiddlerScript")]),e._v(" "),t("h2",{attrs:{id:"fiddler-插件介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fiddler-插件介绍"}},[e._v("#")]),e._v(" Fiddler 插件介绍")]),e._v(" "),t("p",[t("a",{attrs:{href:"http://www.telerik.com/fiddler/add-ons",target:"_blank",rel:"noopener noreferrer"}},[e._v("Fiddler 插件"),t("OutboundLink")],1)]),e._v(" "),t("h3",{attrs:{id:"代码格式化插件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码格式化插件"}},[e._v("#")]),e._v(" 代码格式化插件")]),e._v(" "),t("p",[e._v("JavaScript Formatter Traffic Differ")]),e._v(" "),t("h3",{attrs:{id:"http-代理插件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-代理插件"}},[e._v("#")]),e._v(" HTTP 代理插件")]),e._v(" "),t("p",[e._v("Willow 还有限速功能")]),e._v(" "),t("h2",{attrs:{id:"fiiddler抓包https"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fiiddler抓包https"}},[e._v("#")]),e._v(" fiiddler抓包HTTPS")]),e._v(" "),t("blockquote",[t("p",[e._v("fiddler无法为windows配置根证书解决办法")]),e._v(" "),t("p",[e._v("win10系统中安装了fiddler，一直无法成功创建根证书，一直出现错误提示。无法为windos配置根证书。")]),e._v(" "),t("p",[e._v("解决办法：")]),e._v(" "),t("p",[e._v("打开cmd命令行")]),e._v(" "),t("p",[e._v("进入Fiddler的安装目录下。比如：D:\\Program Files\\Fiddler Web Debugger")]),e._v(" "),t("p",[e._v("输入命令：")]),e._v(" "),t("p",[e._v('makecert.exe -r -ss my -n "CN=DO_NOT_TRUST_FiddlerRoot, O=DO_NOT_TRUST, OU=Created by http://www.fiddler2.com" -sky signature -eku 1.3.6.1.5.5.7.3.1 -h 1 -cy authority -a sha1 -m 120 -b 10/12/2020')]),e._v(" "),t("p",[e._v("注意，最后的日期需要超过你安装软件的日期")]),e._v(" "),t("p",[e._v("最后出现 Succeeded。即可成功创建证书，完美解决。\n————————————————\n版权声明：本文为CSDN博主「white-night」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/shuryuu/java/article/details/88803581")])]),e._v(" "),t("h2",{attrs:{id:"rosin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rosin"}},[e._v("#")]),e._v(" Rosin")]),e._v(" "),t("p",[e._v("Rosin是一个Fiddler插件，协助开发者进行移动端页面开发调试，是移动端web开发、调试利器。")]),e._v(" "),t("h2",{attrs:{id:""}},[t("a",{staticClass:"header-anchor",attrs:{href:"#"}},[e._v("#")])])])}),[],!1,null,null,null);r.default=s.exports}}]);