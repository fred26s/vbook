(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{383:function(v,_,t){"use strict";t.r(_);var a=t(42),s=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"http2-x"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http2-x"}},[v._v("#")]),v._v(" HTTP2.X")]),v._v(" "),t("ul",[t("li",[t("h3",{attrs:{id:"http1-1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http1-1"}},[v._v("#")]),v._v(" HTTP1.1")]),v._v(" "),t("ul",[t("li",[t("p",[t("strong",[v._v("缓存处理")])]),v._v(" "),t("p",[v._v("在 HTTP1.0 中主要使用 header 里的 If-Modified-Since,Expires 来做为缓存判断的标准，HTTP1.1 则引入了更多的缓存控制策略例如 Entity tag，If-Unmodified-Since, If-Match, If-None-Match 等更多可供选择的缓存头来控制缓存策略。")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("带宽优化")])])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("长连接")])]),v._v(" "),t("p",[v._v("在 HTTP1.1 中默认开启 Connection： keep-alive，弥补 HTTP 的效率缺点；")]),v._v(" "),t("blockquote",[t("p",[v._v("当一个网页打开完成后，客户端和服务器之间用于传输 HTTP 数据的 TCP 连接不会关闭，如果客户端再次访问这个服务器上的网页，会继续使用这一条已经建立的连接")])])])])]),v._v(" "),t("li",[t("h3",{attrs:{id:"http2-0"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http2-0"}},[v._v("#")]),v._v(" HTTP2.0")]),v._v(" "),t("ul",[t("li",[t("p",[t("strong",[v._v("多路复用")])]),v._v(" "),t("p",[v._v("即连接共享，即每一个 request 都是是用作连接共享机制；")]),v._v(" "),t("p",[v._v("HTTP/2 通过让所有数据流共用同一个连接，可以更有效地使用 TCP 连接，让高带宽也能真正的服务于 HTTP 的性能提升。")])]),v._v(" "),t("li",[t("h3",{attrs:{id:"二进制传输"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二进制传输"}},[v._v("#")]),v._v(" 二进制传输")]),v._v(" "),t("p",[v._v("在 HTTP1.x 中，我们是通过文本的方式传输数据。文本的表现形式有多样性，因此要做到健壮性考虑的场景必然有很多，但是二进制则不同，只有 0 和 1 的组合；")]),v._v(" "),t("p",[v._v("因此选择了二进制传输，实现方便且健壮。")])]),v._v(" "),t("li",[t("h3",{attrs:{id:"header-压缩"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#header-压缩"}},[v._v("#")]),v._v(" Header 压缩")]),v._v(" "),t("p",[v._v("在 HTTP2.0 中，我们使用了 HPACK（HTTP2 头部压缩算法）压缩格式对传输的 header 进行编码，减少了 header 的大小。")]),v._v(" "),t("p",[v._v("并在两端维护了索引表，用于记录出现过的 header，后面在传输过程中就可以传输已经记录过的 header 的键名，对端收到数据后就可以通过键名找到对应的值。")])])])])]),v._v(" "),t("h2",{attrs:{id:"tcp-和-udp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tcp-和-udp"}},[v._v("#")]),v._v(" TCP 和 UDP")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("TCP 提供可靠的服务。也就是说，通过 TCP 连接传送的数据，无差错，不丢失，不重复，且按序到达;")]),v._v(" "),t("p",[v._v("UDP 尽最大努力交付，即不保证可靠交付")])]),v._v(" "),t("li",[t("p",[v._v("TCP 的逻辑通信信道是全双工的可靠信道，UDP 则是不可靠信道")])])]),v._v(" "),t("h2",{attrs:{id:"三次握手-四次挥手"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三次握手-四次挥手"}},[v._v("#")]),v._v(" 三次握手/四次挥手")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("三次握手，主要为了互相确认已经建立了链接，并都能收到并响应；")]),v._v(" "),t("p",[v._v("请求链接 -》 服务端回应 -》 客户端回应")])]),v._v(" "),t("li",[t("p",[v._v("四次挥手，主要为了确认已关闭链接")]),v._v(" "),t("p",[v._v("请求关闭 -》 服务端回应（客户端停止发送消息，服务端停止监听） -》 服务端回应（服务端停止响应） -》 客户端回应（客户端停止监听服务端消息） -》 断开链接")])])]),v._v(" "),t("h2",{attrs:{id:"浏览器解析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器解析"}},[v._v("#")]),v._v(" 浏览器解析")]),v._v(" "),t("ol",[t("li",[v._v("浏览器输入并发送 URL；")]),v._v(" "),t("li",[v._v("URL 解析/DNS 解析查找域名 IP 地址；（DNS 解析）")]),v._v(" "),t("li",[v._v("网络连接发起 HTTP 请求")]),v._v(" "),t("li",[v._v("HTTP 报文传输过程")]),v._v(" "),t("li",[v._v("客户端接收服务端响应资源；")]),v._v(" "),t("li",[v._v("客户端浏览器进行资源的加载/渲染")]),v._v(" "),t("li",[v._v("浏览器绘制页面；")])]),v._v(" "),t("h2",{attrs:{id:"浏览器渲染"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染"}},[v._v("#")]),v._v(" 浏览器渲染")]),v._v(" "),t("p",[v._v("从耗时的角度，浏览器请求、加载、渲染一个页面，时间花在下面"),t("a",{attrs:{href:"http://link.zhihu.com/?target=https%3A//developers.google.com/speed/docs/insights/mobile",target:"_blank",rel:"noopener noreferrer"}},[v._v("五件事情"),t("OutboundLink")],1),v._v("上：")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("DNS 查询")])]),v._v(" "),t("li",[t("p",[v._v("TCP 连接")])]),v._v(" "),t("li",[t("p",[v._v("HTTP 请求即响应")])]),v._v(" "),t("li",[t("p",[v._v("服务器响应")])]),v._v(" "),t("li",[t("p",[v._v("客户端渲染")]),v._v(" "),t("p",[v._v("客户端渲染，即浏览器解析渲染过程，大致为：")]),v._v(" "),t("ol",[t("li",[v._v("处理 HTML 标记并构建 DOM 树。")]),v._v(" "),t("li",[v._v("处理 CSS 标记并构建 CSSOM 树。")]),v._v(" "),t("li",[v._v("将 DOM 与 CSSOM 合并成一个渲染树。")]),v._v(" "),t("li",[v._v("根据渲染树来布局，以计算每个节点的几何信息。")]),v._v(" "),t("li",[v._v("将各个节点绘制到屏幕上。")])])])]),v._v(" "),t("h2",{attrs:{id:"dns-解析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dns-解析"}},[v._v("#")]),v._v(" DNS 解析")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("检查浏览器缓存中是否缓存过该域名对应的 IP 地址；")])]),v._v(" "),t("li",[t("p",[v._v("如果浏览器缓存没有，那么就检查本地操作系统的 hosts 文件；")])]),v._v(" "),t("li",[t("p",[v._v("如果本地文件没有，就会查询本地 DNS 服务器（当地网络提供商）；")]),v._v(" "),t("p",[t("strong",[v._v("基本在这里完成 80%的域名解析；")])])]),v._v(" "),t("li",[t("p",[v._v("再不行，就直接到根域名请求解析，然后再依次遍历到指定的根节点；")])]),v._v(" "),t("li",[t("p",[v._v("最终将指定域名 DNS 服务器的查询结果，缓存到本地；")])])]),v._v(" "),t("h2",{attrs:{id:"tcp-ip"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tcp-ip"}},[v._v("#")]),v._v(" TCP/IP")]),v._v(" "),t("p",[v._v("IP 的理解")]),v._v(" "),t("h3",{attrs:{id:"什么是公网-ip-外网-ip"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是公网-ip-外网-ip"}},[v._v("#")]),v._v(" 什么是公网 IP（外网 IP）")]),v._v(" "),t("p",[v._v("公网 IP 就是除了保留 IP 地址以外的 IP 地址，可以与 Internet 上的其他计算机随意互相访问。")]),v._v(" "),t("p",[v._v("我们通常所说的 IP 地址，其实就是指的服务商提供的公网 IP。")]),v._v(" "),t("p",[v._v("互联网上的每台计算机都有一个独立的 IP 地址，该 IP 地址唯一确定互联网上的一台计算机。这里的 IP 地址就是指的公网 IP 地址。")]),v._v(" "),t("h3",{attrs:{id:"什么是内网-ip"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是内网-ip"}},[v._v("#")]),v._v(" 什么是内网 IP")]),v._v(" "),t("p",[v._v("首先一般常用内网 IP 地址都是这种形式的：")]),v._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("起始 IP 10.0.0.0 - 结束 IP 10.255.255.255\n起始 IP 172.16.0.0 - 结束 IP 172.31.255.255\n起始 IP 192.168.0.0 - 结束 IP 192.168.255.255\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br"),t("span",{staticClass:"line-number"},[v._v("2")]),t("br"),t("span",{staticClass:"line-number"},[v._v("3")]),t("br")])]),t("p",[v._v("无论是一些小型企业还是学校，通常都是只申请一个或少数几个固定的公网 IP 地址（打比方，相对少），")]),v._v(" "),t("p",[v._v("但是内部需要连接互联网的机器很多，难道都使用一个 IP 地址？那不就 IP 冲突了吗。")]),v._v(" "),t("p",[v._v("不，这时候就需要使用内网 IP 了，内网 IP 也就是相对于局域网来说的；")]),v._v(" "),t("p",[v._v("比如一个小企业有 10 台电脑，只有一个公网 IP；")]),v._v(" "),t("p",[v._v("10 台电脑分配的内网 IP，为"),t("code",[v._v("192.168.0.1~192.168.0.10")]),v._v(";")]),v._v(" "),t("h3",{attrs:{id:"内网-ip-如何访问外网"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内网-ip-如何访问外网"}},[v._v("#")]),v._v(" 内网 IP 如何访问外网")]),v._v(" "),t("p",[v._v("例如 A 电脑和 B 电脑，同时通过各自的 80 端口打开网页，向百度发送请求；")]),v._v(" "),t("p",[v._v("那么即通过内网 IP"),t("code",[v._v("192.168.0.1:80")]),v._v("和"),t("code",[v._v("192.168.0.2:80")]),v._v("，向"),t("code",[v._v("www.baidu.com")]),v._v("发送请求，这是内网是无法直接访问互联网的；")]),v._v(" "),t("p",[v._v("是先将请求数据到达"),t("strong",[v._v("NAT 网络地址转换")]),v._v("，它将这两个访问的源地址改为一个公网地址（例如 1.85.185.885），将端口映射改为空闲的端口 8080 和 8081；")]),v._v(" "),t("p",[v._v("所以最终不是内网 IP 对外访问了 internet，而是外网 IP"),t("code",[v._v("1.85.185.885")]),v._v("的两个端口"),t("code",[v._v("8080 8081")]),v._v("发起了请求；")]),v._v(" "),t("p",[v._v("百度服务器会对这两个公网端口进行数据响应，NAT 在进行逆向转换，将数据发送回内网 IP。")]),v._v(" "),t("p",[v._v("这就完成了内网 IP 访问互联网的过程。")]),v._v(" "),t("h2",{attrs:{id:"nat-网络地址转换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nat-网络地址转换"}},[v._v("#")]),v._v(" NAT 网络地址转换")]),v._v(" "),t("p",[v._v("NAT 是 网络地址转换(Network Address Translation) 的缩写；")]),v._v(" "),t("p",[v._v("NAT 实际上就是为了解决 IPv4 地址供不应求的问题而诞生的，")]),v._v(" "),t("p",[v._v("NAT 会自动地将每一台 PC 在内网的 LAN IP 地址, 在离开防火墙时转换为公网的 IP 地址｡ 此外,当数据包返回时, 也将进行逆向的转换｡")]),v._v(" "),t("p",[v._v("内网 IP 就是房间号，公网 IP 就是位置坐标；")]),v._v(" "),t("p",[v._v("NAT 将房间号拼接转换为具体位置坐标加房间号，来访问外网，也保证了本机 PC 的 IP 唯一性（公网 IP+内网 IP = 唯一 IP）；")]),v._v(" "),t("h2",{attrs:{id:"网关和路由器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#网关和路由器"}},[v._v("#")]),v._v(" 网关和路由器")]),v._v(" "),t("p",[v._v("网关和路由器最大的区别是是否连接相似的网络。")]),v._v(" "),t("ul",[t("li",[v._v("如果连接相似的网络，则称为"),t("strong",[v._v("路由器")]),v._v("。")]),v._v(" "),t("li",[v._v("而连接不相似的网络，称为"),t("strong",[v._v("网关")]),v._v("。")])]),v._v(" "),t("p",[v._v("相似的网络和不相似的网络有两种不同的含义。\n逻辑层面：\n"),t("strong",[v._v("相似的网络")]),v._v("：如果都是互联网上的两个网络，我们称为相似的网络。")]),v._v(" "),t("p",[v._v("不相似的网络：如果一个是私网，一个是公网。我们称为不相似的网络。")])])}),[],!1,null,null,null);_.default=s.exports}}]);